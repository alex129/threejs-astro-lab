---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Text Playground">
	<div class="w-full h-screen bg-black">
		<canvas id="canvas" class="w-full h-full"></canvas>
	</div>
</Layout>

<script>
	import * as THREE from 'three';
	import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';
	import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';

	let scene: THREE.Scene;
	let camera: THREE.PerspectiveCamera;
	let renderer: THREE.WebGLRenderer;
	let textMesh: THREE.Mesh;

	// Initialize Three.js scene
	function init() {
		// Scene setup
		scene = new THREE.Scene();
		camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
		renderer = new THREE.WebGLRenderer({
			canvas: document.getElementById('canvas') as HTMLCanvasElement,
			antialias: true
		});
		renderer.setSize(window.innerWidth, window.innerHeight);
		renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));

		// Camera position
		camera.position.z = 5;

		// Add lights
		const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
		scene.add(ambientLight);

		const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
		directionalLight.position.set(1, 1, 1);
		scene.add(directionalLight);

		// Load font and create text
		const loader = new FontLoader();
		loader.load('/fonts/helvetiker_regular.typeface.json', (font) => {
			const geometry = new TextGeometry('Text Playground', {
				font: font,
				size: 0.5,
				height: 0.2,
				curveSegments: 12,
				bevelEnabled: true,
				bevelThickness: 0.03,
				bevelSize: 0.02,
				bevelOffset: 0,
				bevelSegments: 5
			});

			const material = new THREE.MeshPhongMaterial({ 
				color: 0x00ff00,
				specular: 0xffffff,
				shininess: 100
			});

			textMesh = new THREE.Mesh(geometry, material);
			geometry.computeBoundingBox();
			const centerOffset = -(geometry.boundingBox!.max.x - geometry.boundingBox!.min.x) / 2;
			textMesh.position.x = centerOffset;
			scene.add(textMesh);
		});

		// Handle window resize
		window.addEventListener('resize', onWindowResize, false);
	}

	function onWindowResize() {
		camera.aspect = window.innerWidth / window.innerHeight;
		camera.updateProjectionMatrix();
		renderer.setSize(window.innerWidth, window.innerHeight);
	}

	function animate() {
		requestAnimationFrame(animate);

		if (textMesh) {
			textMesh.rotation.x += 0.01;
			textMesh.rotation.y += 0.01;
		}

		renderer.render(scene, camera);
	}

	// Start the animation
	init();
	animate();
</script> 